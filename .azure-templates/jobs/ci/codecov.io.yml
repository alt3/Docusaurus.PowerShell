# -----------------------------------------------------------------------------
# Job for publishing code coverage report to https://codedov.io
#
# - only runs if global variable `enableCodeCovIO:` is set to true
# - requires configuring CODECOV_TOKEN environment variable
# -----------------------------------------------------------------------------
parameters:
  dependsOn: []
  artifactDownloadDirectory: $(Build.ArtifactStagingDirectory)

jobs:
  - job: CodeCovIO
    displayName: 'Codecov.io'
    dependsOn: ${{ parameters.dependsOn }}
    condition: eq(variables['enableCodeCovIO'], 'true')
    pool:
      vmImage: 'windows-2019'

    steps:
    - template: ../../steps/log-virtual-machine-information.yml

    # -------------------------------------------------------------------------
    # log the template parameters for future debugging
    # -------------------------------------------------------------------------
    - powershell: |
        Write-Host "enableCodeCovIO           = ${{ parameters.enableCodeCovIO }}"
        Write-Host "artifactDownloadDirectory = ${{ parameters.artifactDownloadDirectory }}"
      displayName: 'Template Parameters'

    # -------------------------------------------------------------------------
    # make sure the required CODECOV_TOKEN environment variable exists
    # -------------------------------------------------------------------------
    - powershell: |
        Write-Host "Making sure secret pipeline variable CODECOV_TOKEN is available"
        if($env:MAPPED_CODECOV_TOKEN -match 'CODECOV_TOKEN') {
          throw "Azure pipeline secret variable CODECOV_TOKEN does not exist. Are you sure that you have configured it using the Azure Devops web interface?"
        }
      displayName: 'Validate API Key'
      env:
        MAPPED_CODECOV_TOKEN: $(CODECOV_TOKEN)

    # -------------------------------------------------------------------------
    # download all artifacts, codecov bash will find the report
    # -------------------------------------------------------------------------
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Build Artifacts'
      inputs:
        downloadPath: ${{ parameters.artifactDownloadDirectory }}

    # -------------------------------------------------------------------------
    # https://github.com/codecov/codecov-bash
    # -------------------------------------------------------------------------
    - bash: |
        curl -s https://codecov.io/bash > .codecov
        chmod +x .codecov
        ./.codecov
      displayName: Upload to codecoverage.io
      env:
        CODECOV_TOKEN: $(CODECOV_TOKEN)
